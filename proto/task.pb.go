// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/task.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskRequest) Reset() {
	*x = GetTaskRequest{}
	mi := &file_proto_task_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskRequest) ProtoMessage() {}

func (x *GetTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskRequest.ProtoReflect.Descriptor instead.
func (*GetTaskRequest) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{0}
}

type GetTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*Task                `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskResponse) Reset() {
	*x = GetTaskResponse{}
	mi := &file_proto_task_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskResponse) ProtoMessage() {}

func (x *GetTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskResponse.ProtoReflect.Descriptor instead.
func (*GetTaskResponse) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{1}
}

func (x *GetTaskResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type GetAndLockPendingTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      int32                  `protobuf:"varint,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAndLockPendingTaskRequest) Reset() {
	*x = GetAndLockPendingTaskRequest{}
	mi := &file_proto_task_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAndLockPendingTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAndLockPendingTaskRequest) ProtoMessage() {}

func (x *GetAndLockPendingTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAndLockPendingTaskRequest.ProtoReflect.Descriptor instead.
func (*GetAndLockPendingTaskRequest) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{2}
}

func (x *GetAndLockPendingTaskRequest) GetWorkerId() int32 {
	if x != nil {
		return x.WorkerId
	}
	return 0
}

type GetAndLockPendingTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	TaskFound     bool                   `protobuf:"varint,2,opt,name=task_found,json=taskFound,proto3" json:"task_found,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAndLockPendingTaskResponse) Reset() {
	*x = GetAndLockPendingTaskResponse{}
	mi := &file_proto_task_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAndLockPendingTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAndLockPendingTaskResponse) ProtoMessage() {}

func (x *GetAndLockPendingTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAndLockPendingTaskResponse.ProtoReflect.Descriptor instead.
func (*GetAndLockPendingTaskResponse) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{3}
}

func (x *GetAndLockPendingTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *GetAndLockPendingTaskResponse) GetTaskFound() bool {
	if x != nil {
		return x.TaskFound
	}
	return false
}

type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Arg1          float64                `protobuf:"fixed64,2,opt,name=arg1,proto3" json:"arg1,omitempty"`
	Arg2          float64                `protobuf:"fixed64,3,opt,name=arg2,proto3" json:"arg2,omitempty"`
	Operation     string                 `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation,omitempty"`
	OperationTime int32                  `protobuf:"varint,5,opt,name=operation_time,json=operationTime,proto3" json:"operation_time,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Result        float64                `protobuf:"fixed64,7,opt,name=result,proto3" json:"result,omitempty"`
	Error         string                 `protobuf:"bytes,8,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_proto_task_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{4}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetArg1() float64 {
	if x != nil {
		return x.Arg1
	}
	return 0
}

func (x *Task) GetArg2() float64 {
	if x != nil {
		return x.Arg2
	}
	return 0
}

func (x *Task) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *Task) GetOperationTime() int32 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

func (x *Task) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Task) GetResult() float64 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *Task) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SubmitTaskResultRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*SubmitTaskResultRequest_Task
	//	*SubmitTaskResultRequest_Result
	Request       isSubmitTaskResultRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitTaskResultRequest) Reset() {
	*x = SubmitTaskResultRequest{}
	mi := &file_proto_task_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitTaskResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTaskResultRequest) ProtoMessage() {}

func (x *SubmitTaskResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTaskResultRequest.ProtoReflect.Descriptor instead.
func (*SubmitTaskResultRequest) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{5}
}

func (x *SubmitTaskResultRequest) GetRequest() isSubmitTaskResultRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *SubmitTaskResultRequest) GetTask() *Task {
	if x != nil {
		if x, ok := x.Request.(*SubmitTaskResultRequest_Task); ok {
			return x.Task
		}
	}
	return nil
}

func (x *SubmitTaskResultRequest) GetResult() *TaskResult {
	if x != nil {
		if x, ok := x.Request.(*SubmitTaskResultRequest_Result); ok {
			return x.Result
		}
	}
	return nil
}

type isSubmitTaskResultRequest_Request interface {
	isSubmitTaskResultRequest_Request()
}

type SubmitTaskResultRequest_Task struct {
	Task *Task `protobuf:"bytes,1,opt,name=task,proto3,oneof"`
}

type SubmitTaskResultRequest_Result struct {
	Result *TaskResult `protobuf:"bytes,2,opt,name=result,proto3,oneof"`
}

func (*SubmitTaskResultRequest_Task) isSubmitTaskResultRequest_Request() {}

func (*SubmitTaskResultRequest_Result) isSubmitTaskResultRequest_Request() {}

type TaskResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Result        float64                `protobuf:"fixed64,2,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskResult) Reset() {
	*x = TaskResult{}
	mi := &file_proto_task_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResult) ProtoMessage() {}

func (x *TaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResult.ProtoReflect.Descriptor instead.
func (*TaskResult) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{6}
}

func (x *TaskResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskResult) GetResult() float64 {
	if x != nil {
		return x.Result
	}
	return 0
}

type SubmitTaskResultResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Result        float64                `protobuf:"fixed64,2,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitTaskResultResponse) Reset() {
	*x = SubmitTaskResultResponse{}
	mi := &file_proto_task_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitTaskResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTaskResultResponse) ProtoMessage() {}

func (x *SubmitTaskResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_task_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTaskResultResponse.ProtoReflect.Descriptor instead.
func (*SubmitTaskResultResponse) Descriptor() ([]byte, []int) {
	return file_proto_task_proto_rawDescGZIP(), []int{7}
}

func (x *SubmitTaskResultResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SubmitTaskResultResponse) GetResult() float64 {
	if x != nil {
		return x.Result
	}
	return 0
}

var File_proto_task_proto protoreflect.FileDescriptor

const file_proto_task_proto_rawDesc = "" +
	"\n" +
	"\x10proto/task.proto\x12\x11calculatorservice\"\x10\n" +
	"\x0eGetTaskRequest\"@\n" +
	"\x0fGetTaskResponse\x12-\n" +
	"\x05tasks\x18\x01 \x03(\v2\x17.calculatorservice.TaskR\x05tasks\";\n" +
	"\x1cGetAndLockPendingTaskRequest\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\x05R\bworkerId\"k\n" +
	"\x1dGetAndLockPendingTaskResponse\x12+\n" +
	"\x04task\x18\x01 \x01(\v2\x17.calculatorservice.TaskR\x04task\x12\x1d\n" +
	"\n" +
	"task_found\x18\x02 \x01(\bR\ttaskFound\"\xc9\x01\n" +
	"\x04Task\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04arg1\x18\x02 \x01(\x01R\x04arg1\x12\x12\n" +
	"\x04arg2\x18\x03 \x01(\x01R\x04arg2\x12\x1c\n" +
	"\toperation\x18\x04 \x01(\tR\toperation\x12%\n" +
	"\x0eoperation_time\x18\x05 \x01(\x05R\roperationTime\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x16\n" +
	"\x06result\x18\a \x01(\x01R\x06result\x12\x14\n" +
	"\x05error\x18\b \x01(\tR\x05error\"\x8c\x01\n" +
	"\x17SubmitTaskResultRequest\x12-\n" +
	"\x04task\x18\x01 \x01(\v2\x17.calculatorservice.TaskH\x00R\x04task\x127\n" +
	"\x06result\x18\x02 \x01(\v2\x1d.calculatorservice.TaskResultH\x00R\x06resultB\t\n" +
	"\arequest\"4\n" +
	"\n" +
	"TaskResult\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06result\x18\x02 \x01(\x01R\x06result\"B\n" +
	"\x18SubmitTaskResultResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06result\x18\x02 \x01(\x01R\x06result2\xce\x02\n" +
	"\vTaskService\x12R\n" +
	"\aGetTask\x12!.calculatorservice.GetTaskRequest\x1a\".calculatorservice.GetTaskResponse\"\x00\x12|\n" +
	"\x15GetAndLockPendingTask\x12/.calculatorservice.GetAndLockPendingTaskRequest\x1a0.calculatorservice.GetAndLockPendingTaskResponse\"\x00\x12m\n" +
	"\x10SubmitTaskResult\x12*.calculatorservice.SubmitTaskResultRequest\x1a+.calculatorservice.SubmitTaskResultResponse\"\x00B\x12Z\x10djanGO/proto/genb\x06proto3"

var (
	file_proto_task_proto_rawDescOnce sync.Once
	file_proto_task_proto_rawDescData []byte
)

func file_proto_task_proto_rawDescGZIP() []byte {
	file_proto_task_proto_rawDescOnce.Do(func() {
		file_proto_task_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_task_proto_rawDesc), len(file_proto_task_proto_rawDesc)))
	})
	return file_proto_task_proto_rawDescData
}

var file_proto_task_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_task_proto_goTypes = []any{
	(*GetTaskRequest)(nil),                // 0: calculatorservice.GetTaskRequest
	(*GetTaskResponse)(nil),               // 1: calculatorservice.GetTaskResponse
	(*GetAndLockPendingTaskRequest)(nil),  // 2: calculatorservice.GetAndLockPendingTaskRequest
	(*GetAndLockPendingTaskResponse)(nil), // 3: calculatorservice.GetAndLockPendingTaskResponse
	(*Task)(nil),                          // 4: calculatorservice.Task
	(*SubmitTaskResultRequest)(nil),       // 5: calculatorservice.SubmitTaskResultRequest
	(*TaskResult)(nil),                    // 6: calculatorservice.TaskResult
	(*SubmitTaskResultResponse)(nil),      // 7: calculatorservice.SubmitTaskResultResponse
}
var file_proto_task_proto_depIdxs = []int32{
	4, // 0: calculatorservice.GetTaskResponse.tasks:type_name -> calculatorservice.Task
	4, // 1: calculatorservice.GetAndLockPendingTaskResponse.task:type_name -> calculatorservice.Task
	4, // 2: calculatorservice.SubmitTaskResultRequest.task:type_name -> calculatorservice.Task
	6, // 3: calculatorservice.SubmitTaskResultRequest.result:type_name -> calculatorservice.TaskResult
	0, // 4: calculatorservice.TaskService.GetTask:input_type -> calculatorservice.GetTaskRequest
	2, // 5: calculatorservice.TaskService.GetAndLockPendingTask:input_type -> calculatorservice.GetAndLockPendingTaskRequest
	5, // 6: calculatorservice.TaskService.SubmitTaskResult:input_type -> calculatorservice.SubmitTaskResultRequest
	1, // 7: calculatorservice.TaskService.GetTask:output_type -> calculatorservice.GetTaskResponse
	3, // 8: calculatorservice.TaskService.GetAndLockPendingTask:output_type -> calculatorservice.GetAndLockPendingTaskResponse
	7, // 9: calculatorservice.TaskService.SubmitTaskResult:output_type -> calculatorservice.SubmitTaskResultResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_task_proto_init() }
func file_proto_task_proto_init() {
	if File_proto_task_proto != nil {
		return
	}
	file_proto_task_proto_msgTypes[5].OneofWrappers = []any{
		(*SubmitTaskResultRequest_Task)(nil),
		(*SubmitTaskResultRequest_Result)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_task_proto_rawDesc), len(file_proto_task_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_task_proto_goTypes,
		DependencyIndexes: file_proto_task_proto_depIdxs,
		MessageInfos:      file_proto_task_proto_msgTypes,
	}.Build()
	File_proto_task_proto = out.File
	file_proto_task_proto_goTypes = nil
	file_proto_task_proto_depIdxs = nil
}
